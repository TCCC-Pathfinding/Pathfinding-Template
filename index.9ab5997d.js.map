{"mappings":"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","sources":["node_modules/ol/src/events/EventType.js","node_modules/ol/src/Disposable.js","node_modules/ol/src/events/Event.js","node_modules/ol/src/array.js","node_modules/ol/src/functions.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/TileState.js","node_modules/ol/src/util.js","node_modules/ol/src/easing.js","node_modules/ol/src/Tile.js","node_modules/ol/src/has.js","node_modules/ol/src/dom.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/extent/Corner.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/asserts.js","node_modules/ol/src/extent.js","node_modules/ol/src/events.js","node_modules/ol/src/Image.js","node_modules/ol/src/ImageTile.js","node_modules/ol/src/reproj/common.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/math.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/geom/GeometryType.js","node_modules/ol/src/sphere.js","node_modules/ol/src/proj.js","node_modules/ol/src/reproj/Triangulation.js","node_modules/ol/src/reproj.js","node_modules/ol/src/renderer/canvas/common.js","node_modules/ol/src/reproj/Tile.js","node_modules/ol/src/structs/LRUCache.js","node_modules/ol/src/tilecoord.js","node_modules/ol/src/TileCache.js","node_modules/ol/src/source/TileEventType.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/Observable.js","node_modules/ol/src/Object.js","node_modules/ol/src/source/State.js","node_modules/ol/src/source/Source.js","node_modules/ol/src/TileRange.js","node_modules/ol/src/size.js","node_modules/ol/src/tilegrid/TileGrid.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/tilegrid.js","node_modules/ol/src/source/Tile.js","node_modules/ol/src/tileurlfunction.js","node_modules/ol/src/source/UrlTile.js","node_modules/ol/src/source/TileImage.js","node_modules/ol/src/source/XYZ.js","node_modules/ol/src/source/OSM.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/layer/Layer.js","node_modules/ol/src/layer/TileProperty.js","node_modules/ol/src/layer/BaseTile.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/transform.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/color.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/css.js","node_modules/ol/src/renderer/canvas/TileLayer.js","node_modules/ol/src/layer/Tile.js","node_modules/rbush/rbush.min.js","node_modules/ol/src/style/Image.js","node_modules/ol/src/colorlike.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/style/RegularShape.js","node_modules/ol/src/style/Circle.js","node_modules/ol/src/style/Fill.js","node_modules/ol/src/style/Stroke.js","node_modules/ol/src/style/Style.js","node_modules/ol/src/layer/BaseVector.js","node_modules/ol/src/render/canvas/Instruction.js","node_modules/ol/src/render/VectorContext.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/render/canvas/Builder.js","node_modules/ol/src/render/canvas/ImageBuilder.js","node_modules/ol/src/render/canvas/LineStringBuilder.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/render/canvas/PolygonBuilder.js","node_modules/ol/src/style/TextPlacement.js","node_modules/ol/src/geom/flat/straightchunk.js","node_modules/ol/src/render/canvas/TextBuilder.js","node_modules/ol/src/render/canvas/BuilderGroup.js","node_modules/ol/src/render/canvas/BuilderType.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/geom/flat/textpath.js","node_modules/ol/src/geom/flat/length.js","node_modules/ol/src/render/canvas/Executor.js","node_modules/ol/src/render/canvas/ExecutorGroup.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/render/canvas/Immediate.js","node_modules/ol/src/style/IconAnchorUnits.js","node_modules/ol/src/style/IconOrigin.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/style/IconImage.js","node_modules/ol/src/style/Icon.js","node_modules/ol/src/style/Text.js","node_modules/ol/src/render/canvas/hitdetect.js","node_modules/ol/src/renderer/vector.js","node_modules/ol/src/renderer/canvas/VectorLayer.js","node_modules/ol/src/layer/Vector.js","node_modules/ol/src/Feature.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/Collection.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/View.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/control.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/interaction.js","node_modules/ol/src/Map.js","node_modules/ol/src/geom/flat/interpolate.js","node_modules/ol/src/geom/LineString.js","node_modules/ol/src/format/Feature.js","node_modules/ol/src/format/FormatType.js","node_modules/ol/src/format/TextFeature.js","node_modules/ol/src/geom/flat/flip.js","node_modules/ol/src/format/Polyline.js","node_modules/ol/src/structs/RBush.js","node_modules/ol/src/source/VectorEventType.js","node_modules/ol/src/loadingstrategy.js","node_modules/ol/src/featureloader.js","node_modules/ol/src/source/Vector.js","main.js"],"sourcesContent":["/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ (\n    (function () {\n      throw new Error('Unimplemented abstract method.');\n    })()\n  );\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [opt_options] Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {}\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  !!(\n    ua.indexOf('version/15.4') >= 0 ||\n    ua.match(/cpu (os|iphone os) 15_4 like mac os x/)\n  );\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(\n  opt_width,\n  opt_height,\n  opt_canvasPool,\n  opt_Context2DSettings\n) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (opt_canvasPool && opt_canvasPool.length) {\n    canvas = opt_canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(opt_width || 300, opt_height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', opt_Context2DSettings)\n  );\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n  constructor(\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    opt_options\n  ) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Radians\n   * @api\n   */\n  RADIANS: 'radians',\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': Units.METERS,\n  '9002': Units.FEET,\n  '9003': Units.USFEET,\n  '9101': Units.RADIANS,\n  '9102': Units.DEGREES,\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.RADIANS] = 6370997 / (2 * Math.PI);\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution getPointResolution()} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [opt_disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(opt_disable) {\n  const hide = opt_disable === undefined ? true : opt_disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  This includes all API\n * methods except for those interacting with tile grids.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {log2, modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    opt_destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (opt_destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              log2(\n                getArea(targetExtent) /\n                  (opt_destinationResolution *\n                    opt_destinationResolution *\n                    256 *\n                    256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {IMAGE_SMOOTHING_DISABLED} from './renderer/canvas/common.js';\nimport {assign} from './obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [opt_renderEdges] Render reprojection edges.\n * @param {object} [opt_interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  opt_renderEdges,\n  opt_interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height)\n  );\n\n  if (!opt_interpolate) {\n    assign(context, IMAGE_SMOOTHING_DISABLED);\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n\n  if (!opt_interpolate) {\n    assign(stitchContext, IMAGE_SMOOTHING_DISABLED);\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !opt_interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/renderer/canvas/common\n */\n\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_DISABLED = {\n  imageSmoothingEnabled: false,\n  msImageSmoothingEnabled: false,\n};\n\n/**\n * Context options to enable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_ENABLED = {\n  imageSmoothingEnabled: true,\n  msImageSmoothingEnabled: true,\n};\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [opt_errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [opt_renderEdges] Render reprojection edges.\n   * @param {boolean} [opt_interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges,\n    opt_interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!opt_interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [opt_highWaterMark] High water mark.\n   */\n  constructor(opt_highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark =\n      opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [opt_options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [opt_tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    opt_tileRange,\n    opt_extent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          opt_tileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          opt_tileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        opt_extent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        opt_tileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, opt_tileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        opt_tileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, opt_tileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, opt_tileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      opt_tileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [opt_options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [opt_maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(\n  extent,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_maxResolution\n) {\n  const maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(\n    opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE\n  );\n  const maxResolution =\n    opt_maxResolution > 0\n      ? opt_maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(\n  projection,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_corner\n) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    if (!this.tileGrid) {\n      return null;\n    }\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    assert(\n      equivalent(this.getProjection(), projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection =\n      opt_projection !== undefined ? opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    let interpolate =\n      options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] =\n          getTileGridForProjection(projection);\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.getInterpolate()\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render\n    ) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [opt_options] XYZ options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    let interpolate =\n      options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [opt_options] Open Street Map options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    let interpolate =\n      options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [opt_background] Background color.\n   */\n  setBackground(opt_background) {\n    this.background_ = opt_background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}. Components\n * like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link import(\"../PluggableMap.js\").default#forEachLayerAtPixel map.forEachLayerAtPixel()} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../PluggableMap.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map~Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return null;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  const canvas = document.createElement('canvas');\n  canvas.width = 1;\n  canvas.height = 1;\n  pixelContext = canvas.getContext('2d');\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../PluggableMap.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../PluggableMap.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   * @param {string} [opt_backgroundColor] Background color.\n   */\n  useContainer(target, transform, opacity, opt_backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      target.style.opacity === '' &&\n      opacity === 1 &&\n      (!opt_backgroundColor ||\n        (target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(opt_backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      if (opt_backgroundColor) {\n        style.backgroundColor = opt_backgroundColor;\n      }\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    const x = Math.round(renderPixel[0]);\n    const y = Math.round(renderPixel[1]);\n    let pixelContext = this.pixelContext_;\n    if (!pixelContext) {\n      const pixelCanvas = document.createElement('canvas');\n      pixelCanvas.width = 1;\n      pixelCanvas.height = 1;\n      pixelContext = pixelCanvas.getContext('2d');\n      this.pixelContext_ = pixelContext;\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n    let data;\n    try {\n      pixelContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        this.pixelContext_ = null;\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n\n/**\n * @param {number} opacity Opacity (0..1).\n * @return {string} CSS opacity.\n */\nexport function cssOpacity(opacity) {\n  return opacity === 1 ? '' : String(Math.round(opacity * 100) / 100);\n}\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {IMAGE_SMOOTHING_DISABLED, IMAGE_SMOOTHING_ENABLED} from './common.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {cssOpacity} from '../../css.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (!(tile instanceof ImageTile || tile instanceof ReprojTile)) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      return this.getImageData(tile.getImage(), col, row);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / tilePixelRatio,\n      1 / tilePixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(\n      target,\n      canvasTransform,\n      layerState.opacity,\n      this.getBackground(frameState)\n    );\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      assign(context, IMAGE_SMOOTHING_DISABLED);\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    assign(context, IMAGE_SMOOTHING_ENABLED);\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n    const opacity = cssOpacity(layerState.opacity);\n    const container = this.container;\n    if (opacity !== container.style.opacity) {\n      container.style.opacity = opacity;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    return [size[0] / 2 - displacement[0], size[1] / 2 + displacement[1]];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distnce from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (context.setLineDash && renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n   * property will have no visual effect in these browsers.\n   *\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n   *\n   * @param {Array<number>} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import GeometryType from 'ol/geom/GeometryType';\n *  import {Circle, Fill, Stroke, Style} from 'ol/style';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n *\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n *\n *  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n *    styles[GeometryType.LINE_STRING]\n *  );\n *\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n *\n *  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n *    GeometryType.POLYGON\n *  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [opt_options] Style options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n    styles[GeometryType.LINE_STRING]\n  );\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n    GeometryType.POLYGON\n  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport {assign} from '../obj.js';\nimport {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n   * is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * {@link module:ol/style/Style~Style} for information on the default style.\n   * @param {import(\"../style/Style.js\").StyleLike|null} [opt_style] Layer style.\n   * @api\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n    this.styleFunction_ =\n      opt_style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, opt_declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, opt_declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case GeometryType.MULTI_POLYGON:\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case GeometryType.POLYGON:\n      case GeometryType.MULTI_LINE_STRING:\n        builderEnds = [];\n        flatCoordinates =\n          type == GeometryType.POLYGON\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case GeometryType.LINE_STRING:\n      case GeometryType.CIRCLE:\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case GeometryType.MULTI_POINT:\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case GeometryType.POINT:\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, opt_sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const hitDetectionImage = imageStyle.getHitDetectionImage();\n    const image = imageStyle.getImage(this.pixelRatio);\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0] * this.imagePixelRatio_;\n    this.originY_ = origin[1] * this.imagePixelRatio_;\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line',\n};\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === TextPlacement.LINE &&\n      (geometryType == GeometryType.LINE_STRING ||\n        geometryType == GeometryType.MULTI_LINE_STRING ||\n        geometryType == GeometryType.POLYGON ||\n        geometryType == GeometryType.MULTI_POLYGON)\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setTextStyle(textStyle, opt_sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/BuilderType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text',\n};\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../../has.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = horizontalTextAlign(\n      textIsArray ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      // eslint-disable-next-line\n      const Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n      if (Context.prototype.setLineDash) {\n        contextInstructions.push('setLineDash', [strokeState.lineDash]);\n        contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n      }\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (context.setLineDash) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    opt_featureCallback,\n    opt_hitExtent,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            opt_hitExtent !== undefined &&\n            !intersects(opt_hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[14]\n            );\n\n          if (!image && instruction.length >= 19) {\n            // create label images\n            text = /** @type {string} */ (instruction[18]);\n            textKey = /** @type {string} */ (instruction[19]);\n            strokeKey = /** @type {string} */ (instruction[20]);\n            fillKey = /** @type {string} */ (instruction[21]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[22]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[23]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 24) {\n            geometryWidths = /** @type {number} */ (instruction[24]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            let imageArgs;\n            let imageDeclutterBox;\n            if (opt_declutterTree && declutterImageWithText) {\n              const index = dd - d;\n              if (!declutterImageWithText[index]) {\n                // We now have the image for an image+text combination.\n                declutterImageWithText[index] = args;\n                // Don't render anything for now, wait for the text.\n                continue;\n              }\n              imageArgs = declutterImageWithText[index];\n              delete declutterImageWithText[index];\n              imageDeclutterBox = getDeclutterBox(imageArgs);\n              if (opt_declutterTree.collides(imageDeclutterBox)) {\n                continue;\n              }\n            }\n            if (\n              opt_declutterTree &&\n              opt_declutterTree.collides(dimensions.declutterBox)\n            ) {\n              continue;\n            }\n            if (imageArgs) {\n              // We now have image and text for an image+text combination.\n              if (opt_declutterTree) {\n                opt_declutterTree.insert(imageDeclutterBox);\n              }\n              // Render the image before we render the text.\n              this.replayImageOrLabel_.apply(this, imageArgs);\n            }\n            if (opt_declutterTree) {\n              opt_declutterTree.insert(dimensions.declutterBox);\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (opt_declutterTree) {\n                opt_declutterTree.load(\n                  replayImageOrLabelArgs.map(getDeclutterBox)\n                );\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (opt_featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = opt_featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      opt_declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      opt_featureCallback,\n      opt_hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nconst ORDER = [\n  BuilderType.POLYGON,\n  BuilderType.CIRCLE,\n  BuilderType.LINE_STRING,\n  BuilderType.IMAGE,\n  BuilderType.TEXT,\n  BuilderType.DEFAULT,\n];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [opt_renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    opt_renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== BuilderType.IMAGE &&\n              builderType !== BuilderType.TEXT) ||\n            declutteredFeatures.indexOf(feature) !== -1\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"./BuilderType.js\").default>} [opt_builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_builderTypes,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    const builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (opt_declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            opt_declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    opt_squaredTolerance,\n    opt_userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = opt_squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = opt_userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        const localTransform = composeTransform(\n          this.tmpLocalTransform_,\n          x,\n          y,\n          1,\n          1,\n          rotation,\n          -x,\n          -y\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(x, y);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(\n            (contextStrokeState.lineDash = strokeState.lineDash)\n          );\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (\n        textState.textBaseline\n      );\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n        context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n        context.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * this.pixelRatio_;\n    this.imageAnchorY_ = imageAnchor[1] * this.pixelRatio_;\n    this.imageHeight_ = imageSize[1] * this.pixelRatio_;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    this.imageScale_ = imageStyle.getScaleArray();\n    this.imageWidth_ = imageSize[0] * this.pixelRatio_;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Anchor is a fraction\n   * @api\n   */\n  FRACTION: 'fraction',\n  /**\n   * Anchor is in pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n};\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Origin is at bottom left\n   * @api\n   */\n  BOTTOM_LEFT: 'bottom-left',\n  /**\n   * Origin is at bottom right\n   * @api\n   */\n  BOTTOM_RIGHT: 'bottom-right',\n  /**\n   * Origin is at top left\n   * @api\n   */\n  TOP_LEFT: 'top-left',\n  /**\n   * Origin is at top right\n   * @api\n   */\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const canvas = document.createElement('canvas');\n    this.canvas_[pixelRatio] = canvas;\n\n    canvas.width = Math.ceil(this.image_.width * pixelRatio);\n    canvas.height = Math.ceil(this.image_.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(this.image_, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    // Internet Explorer 11 does not support the multiply operation.\n    // If the canvas is tainted in Internet Explorer this still produces\n    // a solid color image with the shape of the icon.\n    if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n      ctx.fillStyle = asString(this.color_);\n      ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.drawImage(this.image_, 0, 0);\n    } else {\n      const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const data = imgData.data;\n      const r = this.color_[0] / 255.0;\n      const g = this.color_[1] / 255.0;\n      const b = this.color_[2] / 255.0;\n      const a = this.color_[3];\n\n      for (let i = 0, ii = data.length; i < ii; i += 4) {\n        data[i] *= r;\n        data[i + 1] *= g;\n        data[i + 2] *= b;\n        data[i + 3] *= a;\n      }\n      ctx.putImageData(imgData, 0, 0);\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined\n        ? options.anchorOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined\n        ? options.anchorXUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined\n        ? options.anchorYUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|undefined}\n     */\n    this.imgSize_ = options.imgSize;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      this.imgSize_ !== undefined ? this.imgSize_ : null,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined\n        ? options.offsetOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      imgSize: this.imgSize_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n        this.anchorYUnits_ == IconAnchorUnits.FRACTION\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    return [anchor[0] - displacement[0], anchor[1] + displacement[1]];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\nimport {toSize} from '../size.js';\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {import(\"./TextPlacement.js\").default|string}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {string|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {string|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {string|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {string|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport {Icon} from '../../style.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: IconAnchorUnits.PIXELS,\n            anchorYUnits: IconAnchorUnits.PIXELS,\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType[GeometryType.POLYGON] = [];\n        byGeometryType[GeometryType.CIRCLE] = [];\n        byGeometryType[GeometryType.LINE_STRING] = [];\n        byGeometryType[GeometryType.POINT] = [];\n      }\n      byGeometryType[geometry.getType().replace('Multi', '')].push(\n        geometry,\n        style\n      );\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.CIRCLE\n    );\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    opt_transform,\n    opt_declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    opt_transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {cssOpacity} from '../../css.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, opt_declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        opt_declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(\n      target,\n      canvasTransform,\n      layerState.opacity,\n      this.getBackground(frameState)\n    );\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      return null;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    const opacity = cssOpacity(layerState.opacity);\n    const container = this.container;\n    if (opacity !== container.style.opacity) {\n      container.style.opacity = opacity;\n    }\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      /**\n       * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (resolve) {\n        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n          const size = [this.context.canvas.width, this.context.canvas.height];\n          apply(this.pixelTransform, size);\n          const center = this.renderedCenter_;\n          const resolution = this.renderedResolution_;\n          const rotation = this.renderedRotation_;\n          const projection = this.renderedProjection_;\n          const extent = this.wrappedRenderedExtent_;\n          const layer = this.getLayer();\n          const transforms = [];\n          const width = size[0] * HIT_DETECT_RESOLUTION;\n          const height = size[1] * HIT_DETECT_RESOLUTION;\n          transforms.push(\n            this.getRenderTransform(\n              center,\n              resolution,\n              rotation,\n              HIT_DETECT_RESOLUTION,\n              width,\n              height,\n              0\n            ).slice()\n          );\n          const source = layer.getSource();\n          const projectionExtent = projection.getExtent();\n          if (\n            source.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)\n          ) {\n            let startX = extent[0];\n            const worldWidth = getWidth(projectionExtent);\n            let world = 0;\n            let offsetX;\n            while (startX < projectionExtent[0]) {\n              --world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n              ++world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX -= worldWidth;\n            }\n          }\n\n          this.hitDetectionImageData_ = createHitDetectionImageData(\n            size,\n            transforms,\n            this.renderedFeatures_,\n            layer.getStyleFunction(),\n            extent,\n            resolution,\n            rotation\n          );\n        }\n        resolve(\n          hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n        );\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (!this.dirty_ && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      !this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          this.dirty_ = this.dirty_ || dirty;\n        }\n      }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    opt_transform,\n    opt_declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            opt_transform,\n            opt_declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        opt_transform,\n        opt_declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [opt_geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(opt_geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (opt_geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [opt_style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style;\n    this.styleFunction_ = !opt_style\n      ? undefined\n      : createStyleFunction(opt_style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != SourceState.READY &&\n          sourceState != SourceState.UNDEFINED)\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*} [opt_element] Element.\n   * @param {number} [opt_index] The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [opt_array] Array.\n   * @param {Options} [opt_options] Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [opt_except] Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If opt_states is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!opt_states && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/render/Event~RenderEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/render/Event~RenderEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n      const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (opt_isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to contruct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [opt_options] View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [opt_hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [opt_options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [opt_options] Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [opt_duration] The animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} PluggableMapOnSignature\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {PluggableMap} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {PluggableMapOnSignature<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (\n          event.element\n        );\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Please the `layer.getData()` method for {@link module:ol/layer/Tile~TileLayer#getData tile layers} or\n   * {@link module:ol/layer/Image~ImageLayer#getData image layers} instead of using this method.\n   *\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: In maps with more than one layer, this method will typically return pixel data\n   * representing the composed image of all layers visible at the given pixel – because layers\n   * will generally share the same rendering context.  To force layers to render separately, and\n   * to get pixel data representing only one layer at a time, you can assign each layer a unique\n   * `className` in its constructor.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer~Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   * @deprecated\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        state.layer\n      ).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const targetElement = this.getTargetElement();\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const defaultView = this.getOwnerDocument().defaultView;\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(defaultView, EventType.RESIZE, this.updateSize, this),\n      ];\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    /** @type {import(\"./renderer/Map.js\").default} */ (\n      this.renderer_\n    ).renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  opt_dest,\n  opt_dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  const dest = opt_dest ? opt_dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate) {\n    if (\n      this.layout != GeometryLayout.XYM &&\n      this.layout != GeometryLayout.XYZM\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      opt_dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/format/Feature\n */\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {assign} from '../obj.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, opt_options) {\n    let options;\n    if (opt_options) {\n      let dataProjection = opt_options.dataProjection\n        ? getProjection(opt_options.dataProjection)\n        : this.readProjection(source);\n      if (\n        opt_options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === Units.TILE_PIXELS\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(opt_options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: opt_options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, opt_options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [opt_options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    opt_options &&\n    /** @type {WriteOptions} */ (opt_options).decimals !== undefined\n  ) {\n    const power = Math.pow(\n      10,\n      /** @type {WriteOptions} */ (opt_options).decimals\n    );\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [opt_options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  } else {\n    return extent;\n  }\n}\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml',\n};\n","/**\n * @module ol/format/TextFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for text feature formats.\n *\n * @abstract\n */\nclass TextFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return FormatType.TEXT;\n  }\n\n  /**\n   * Read the feature from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, opt_options) {\n    return this.readFeatureFromText(\n      getText(source),\n      this.adaptOptions(opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the features from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    return this.readFeaturesFromText(\n      getText(source),\n      this.adaptOptions(opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromText(text, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the geometry from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, opt_options) {\n    return this.readGeometryFromText(\n      getText(source),\n      this.adaptOptions(opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromText(getText(source));\n  }\n\n  /**\n   * @param {string} text Text.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjectionFromText(text) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as a string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, opt_options) {\n    return this.writeFeatureText(feature, this.adaptOptions(opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, opt_options) {\n    return this.writeFeaturesText(features, this.adaptOptions(opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Geometry.\n   * @api\n   */\n  writeGeometry(geometry, opt_options) {\n    return this.writeGeometryText(geometry, this.adaptOptions(opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, opt_options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {string} Text.\n */\nfunction getText(source) {\n  if (typeof source === 'string') {\n    return source;\n  } else {\n    return '';\n  }\n}\n\nexport default TextFeature;\n","/**\n * @module ol/geom/flat/flip\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_destOffset] Destination offset.\n * @return {Array<number>} Flat coordinates.\n */\nexport function flipXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_dest,\n  opt_destOffset\n) {\n  let dest, destOffset;\n  if (opt_dest !== undefined) {\n    dest = opt_dest;\n    destOffset = opt_destOffset !== undefined ? opt_destOffset : 0;\n  } else {\n    dest = [];\n    destOffset = 0;\n  }\n  let j = offset;\n  while (j < end) {\n    const x = flatCoordinates[j++];\n    dest[destOffset++] = flatCoordinates[j++];\n    dest[destOffset++] = x;\n    for (let k = 2; k < stride; ++k) {\n      dest[destOffset++] = flatCoordinates[j++];\n    }\n  }\n  dest.length = destOffset;\n  return dest;\n}\n","/**\n * @module ol/format/Polyline\n */\nimport Feature from '../Feature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport TextFeature from './TextFeature.js';\nimport {assert} from '../asserts.js';\nimport {flipXY} from '../geom/flat/flip.js';\nimport {get as getProjection} from '../proj.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [factor=1e5] The factor by which the coordinates values will be scaled.\n * @property {GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the format reader.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the Encoded\n * Polyline Algorithm Format.\n *\n * When reading features, the coordinates are assumed to be in two dimensions\n * and in [latitude, longitude] order.\n *\n * As Polyline sources contain a single feature,\n * {@link module:ol/format/Polyline~Polyline#readFeatures} will return the\n * feature in an array.\n *\n * @api\n */\nclass Polyline extends TextFeature {\n  /**\n   * @param {Options} [opt_options] Optional configuration object.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.factor_ = options.factor ? options.factor : 1e5;\n\n    /**\n     * @private\n     * @type {import(\"../geom/GeometryLayout\").default}\n     */\n    this.geometryLayout_ = options.geometryLayout\n      ? options.geometryLayout\n      : GeometryLayout.XY;\n  }\n\n  /**\n   * @protected\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, opt_options) {\n    const geometry = this.readGeometryFromText(text, opt_options);\n    return new Feature(geometry);\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromText(text, opt_options) {\n    const feature = this.readFeatureFromText(text, opt_options);\n    return [feature];\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, opt_options) {\n    const stride = getStrideForLayout(this.geometryLayout_);\n    const flatCoordinates = decodeDeltas(text, stride, this.factor_);\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    const coordinates = inflateCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    const lineString = new LineString(coordinates, this.geometryLayout_);\n\n    return transformGeometryWithOptions(\n      lineString,\n      false,\n      this.adaptOptions(opt_options)\n    );\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default<LineString>} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, opt_options) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      return this.writeGeometryText(geometry, opt_options);\n    } else {\n      assert(false, 40); // Expected `feature` to have a geometry\n      return '';\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default<LineString>>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, opt_options) {\n    return this.writeFeatureText(features[0], opt_options);\n  }\n\n  /**\n   * @param {LineString} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, opt_options) {\n    geometry =\n      /** @type {LineString} */\n      (\n        transformGeometryWithOptions(\n          geometry,\n          true,\n          this.adaptOptions(opt_options)\n        )\n      );\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    return encodeDeltas(flatCoordinates, stride, this.factor_);\n  }\n}\n\n/**\n * Encode a list of n-dimensional points and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of n-dimensional points.\n * @param {number} stride The number of dimension of the points in the list.\n * @param {number} [opt_factor] The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeDeltas(numbers, stride, opt_factor) {\n  const factor = opt_factor ? opt_factor : 1e5;\n  let d;\n\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  for (let i = 0, ii = numbers.length; i < ii; ) {\n    for (d = 0; d < stride; ++d, ++i) {\n      const num = numbers[i];\n      const delta = num - lastNumbers[d];\n      lastNumbers[d] = num;\n\n      numbers[i] = delta;\n    }\n  }\n\n  return encodeFloats(numbers, factor);\n}\n\n/**\n * Decode a list of n-dimensional points from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} stride The number of dimension of the points in the\n *     encoded string.\n * @param {number} [opt_factor] The factor by which the resulting numbers will\n *     be divided. Default is `1e5`.\n * @return {Array<number>} A list of n-dimensional points.\n * @api\n */\nexport function decodeDeltas(encoded, stride, opt_factor) {\n  const factor = opt_factor ? opt_factor : 1e5;\n  let d;\n\n  /** @type {Array<number>} */\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  const numbers = decodeFloats(encoded, factor);\n\n  for (let i = 0, ii = numbers.length; i < ii; ) {\n    for (d = 0; d < stride; ++d, ++i) {\n      lastNumbers[d] += numbers[i];\n\n      numbers[i] = lastNumbers[d];\n    }\n  }\n\n  return numbers;\n}\n\n/**\n * Encode a list of floating point numbers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of floating point numbers.\n * @param {number} [opt_factor] The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeFloats(numbers, opt_factor) {\n  const factor = opt_factor ? opt_factor : 1e5;\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] = Math.round(numbers[i] * factor);\n  }\n\n  return encodeSignedIntegers(numbers);\n}\n\n/**\n * Decode a list of floating point numbers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} [opt_factor] The factor by which the result will be divided.\n *     Default is `1e5`.\n * @return {Array<number>} A list of floating point numbers.\n * @api\n */\nexport function decodeFloats(encoded, opt_factor) {\n  const factor = opt_factor ? opt_factor : 1e5;\n  const numbers = decodeSignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] /= factor;\n  }\n  return numbers;\n}\n\n/**\n * Encode a list of signed integers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of signed integers.\n * @return {string} The encoded string.\n */\nexport function encodeSignedIntegers(numbers) {\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = num < 0 ? ~(num << 1) : num << 1;\n  }\n  return encodeUnsignedIntegers(numbers);\n}\n\n/**\n * Decode a list of signed integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of signed integers.\n */\nexport function decodeSignedIntegers(encoded) {\n  const numbers = decodeUnsignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = num & 1 ? ~(num >> 1) : num >> 1;\n  }\n  return numbers;\n}\n\n/**\n * Encode a list of unsigned integers and return an encoded string\n *\n * @param {Array<number>} numbers A list of unsigned integers.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedIntegers(numbers) {\n  let encoded = '';\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    encoded += encodeUnsignedInteger(numbers[i]);\n  }\n  return encoded;\n}\n\n/**\n * Decode a list of unsigned integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of unsigned integers.\n */\nexport function decodeUnsignedIntegers(encoded) {\n  const numbers = [];\n  let current = 0;\n  let shift = 0;\n  for (let i = 0, ii = encoded.length; i < ii; ++i) {\n    const b = encoded.charCodeAt(i) - 63;\n    current |= (b & 0x1f) << shift;\n    if (b < 0x20) {\n      numbers.push(current);\n      current = 0;\n      shift = 0;\n    } else {\n      shift += 5;\n    }\n  }\n  return numbers;\n}\n\n/**\n * Encode one single unsigned integer and return an encoded string\n *\n * @param {number} num Unsigned integer that should be encoded.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedInteger(num) {\n  let value,\n    encoded = '';\n  while (num >= 0x20) {\n    value = (0x20 | (num & 0x1f)) + 63;\n    encoded += String.fromCharCode(value);\n    num >>= 5;\n  }\n  value = num + 63;\n  encoded += String.fromCharCode(value);\n  return encoded;\n}\n\nexport default Polyline;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [opt_maxEntries] Max entries.\n   */\n  constructor(opt_maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(opt_maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(opt_extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(\n      data.minX,\n      data.minY,\n      data.maxX,\n      data.maxY,\n      opt_extent\n    );\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == FormatType.ARRAY_BUFFER) {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == FormatType.JSON || type == FormatType.TEXT) {\n        source = xhr.responseText;\n      } else if (type == FormatType.XML) {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == FormatType.ARRAY_BUFFER) {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {getValues, isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [opt_feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [opt_features] Features.\n   */\n  constructor(type, opt_feature, opt_features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          var features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options} [opt_options] Vector source options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    let collection, features;\n    if (Array.isArray(options.features)) {\n      features =\n        /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n          options.features\n        );\n    } else if (options.features) {\n      collection =\n        /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */ (\n          options.features\n        );\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n              evt.element\n            )\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n              evt.element\n            )\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature removefeature} events.\n   * @api\n   */\n  clear(opt_fast) {\n    if (opt_fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = function (feature) {\n          this.removeFeatureInternal(feature);\n        }.bind(this);\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.getInExtent(extent);\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [opt_filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    const filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          function (features) {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          }.bind(this),\n          function () {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }.bind(this)\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","import OSM from 'ol/source/OSM';\r\nimport TileLayer from 'ol/layer/Tile';\r\nimport VectorLayer from 'ol/layer/Vector';\r\nimport {Feature, Map, View} from 'ol';\r\nimport {Circle as CircleStyle, Fill, Stroke, Style, Text} from 'ol/style';\r\nimport Polyline from 'ol/format/Polyline';\r\nimport {Vector as VectorSource} from 'ol/source';\r\nimport {fromLonLat} from 'ol/proj';\r\nimport Point from 'ol/geom/Point';\r\n\r\n/**\r\n * Tech Connect Project # 1\r\n * Restaurant Map Pathfinding\r\n */\r\n\r\n//Vector Source containing features on map\r\nconst source = new VectorSource();\r\nconst coordinatesList = []\r\n\r\n//Basic client to host JSON data\r\nconst client = new XMLHttpRequest();\r\nclient.open('GET', './data/test_data.json');\r\n\r\n\r\n// Creates features from JSON data\r\n// Creates routes IN ORDER from JSON input\r\nclient.onload = function () {\r\n    const json = JSON.parse(client.responseText);\r\n    const features = [];\r\n\r\n    for (let location of json){\r\n      let coords = [location[\"lon\"],location[\"lat\"]]\r\n      coordinatesList.push(coords)\r\n      let feature = new Feature({\r\n        geometry: new Point(fromLonLat(coords)),\r\n      })\r\n\r\n      //Styling configuration and text\r\n      const style = new Style({\r\n        image: new CircleStyle({\r\n          radius: 4,\r\n          fill: new Fill({\r\n            color: '#0084ff',\r\n          }),\r\n          stroke: new Stroke({\r\n            color: 'black',\r\n            width: 2,\r\n          }),\r\n        }),\r\n        text: new Text({\r\n          font: '12px Calibri,sans-serif',\r\n          text: location[\"location\"],\r\n          textBaseline: 'bottom',\r\n          fill: new Fill({\r\n            color: 'rgba(0,0,0,1)'\r\n          }),\r\n          stroke: new Stroke({\r\n            color: 'rgba(255,255,255,1)',\r\n            width: 3\r\n          })\r\n        })\r\n      });\r\n      feature.setStyle(style)\r\n      features.push(feature)\r\n    }\r\n    console.log(features)\r\n    //Add the features to the Vector Source\r\n    source.addFeatures(features);\r\n    renderRoutes(coordinatesList)\r\n  };\r\n  client.send();\r\n\r\n//Layer containing the points rendered on top of the map\r\nconst vectorLayer = new VectorLayer({\r\n  source: source,\r\n});\r\n\r\n//Layer with the actual map\r\nconst osmLayer = new TileLayer({\r\n  source: new OSM(),\r\n})\r\n\r\n//View Object\r\nconst view = new View({\r\n  center: fromLonLat([-78.8759022, 42.8795322]),\r\n  zoom: 14,\r\n\r\n})\r\n\r\n//Map Object\r\nconst map = new Map({\r\n  target: 'map-container',\r\n  layers: [ osmLayer, vectorLayer],\r\n  view: view\r\n});\r\n\r\n// To allow the map to refresh itself\r\nfunction animate() {\r\n  map.render();\r\n  window.requestAnimationFrame(animate);\r\n}\r\nanimate();\r\n\r\n// Renders routes between a list of coordinates in order\r\nasync function renderRoutes(pointsList){\r\n  for (let i = 0; i < pointsList.length; i++){\r\n    let loc1 = pointsList[i].toString()\r\n    let loc2 = pointsList[i + 1].toString()\r\n    renderRoute(loc1, loc2)\r\n    if((i + 1) == pointsList.length - 1){\r\n      break;\r\n    }\r\n\r\n  }\r\n}\r\n\r\n// Adds a route by creating a Polyline Feature from API call\r\nasync function renderRoute(loc1, loc2){\r\n  const url_osrm_route = '//router.project-osrm.org/route/v1/driving/';\r\n  let res = await fetch(url_osrm_route + loc1+ \";\" + loc2)\r\n  let json = await res.json()\r\n  let feat = createRouteFeature(json.routes[0].geometry)\r\n  source.addFeature(feat)\r\n}\r\n\r\n// Polyline Feature Object and Style\r\nfunction createRouteFeature(polyline){\r\n  var route = new Polyline({\r\n      factor: 1e5\r\n      }).readGeometry(polyline, {\r\n          dataProjection: 'EPSG:4326',\r\n          featureProjection: 'EPSG:3857'\r\n      });\r\n  \r\n      var feature = new Feature({\r\n  type: 'route',\r\n  geometry: route\r\n  });\r\n\r\n  let routeStyle = new Style({\r\n      stroke: new Stroke({\r\n      width: 6, color: [10, 10, 10, 0.7]\r\n      })\r\n  })\r\n\r\n  feature.setStyle(routeStyle);\r\n  return feature\r\n}\r\n"],"names":["$294047c5e65f31a3$export$2e2bcd8739ae039","CHANGE","ERROR","BLUR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","$3273ed08087da3da$export$2e2bcd8739ae039","Disposable1","this","disposed","prototype","dispose","disposeInternal","$aeedce20e9577100$export$2e2bcd8739ae039","BaseEvent1","type","propagationStopped","defaultPrevented","target","preventDefault","stopPropagation","$b998d41b678ed5d1$export$2e0ae67339d5f1ac","haystack","needle","opt_comparator","mid","cmp","comparator","$b998d41b678ed5d1$export$4e734a3b32fb971b","low","high","length","found","a","b","$b998d41b678ed5d1$export$8a3786cc03fdb777","arr","direction","n","i","$b998d41b678ed5d1$export$292cfa960964f0e0","begin","end","tmp","$b998d41b678ed5d1$export$8b58be045bf06082","data","extension","Array","isArray","$b998d41b678ed5d1$export$e9bab7fafb253603","arr1","arr2","len1","$013a1733c226ec50$export$22e23a2304399231","$013a1733c226ec50$export$8f11cee4bdc7e668","$013a1733c226ec50$export$1cd1943b3a73bbe8","$beaefe87199bb537$export$e6e34fd1f2686227","Object","assign","var_sources","TypeError","output","ii","arguments","source","key","hasOwnProperty","$beaefe87199bb537$export$42ffd38884aecdac","object","property","$beaefe87199bb537$export$a5c4301012ad6f07","values","push","$beaefe87199bb537$export$dd1bc94b04021eeb","$08c28d22c0cb5a39$export$2e2bcd8739ae039","_super","Target1","opt_target","_this","call","eventTarget_","pendingRemovals_","dispatching_","listeners_","$08c28d22c0cb5a39$var$__extends","addEventListener","listener","listeners","listenersForType","indexOf","dispatchEvent","event","isString","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","opt_type","keys","index","splice","$b8291d9739c3c64e$export$2e2bcd8739ae039","IDLE","LOADING","LOADED","EMPTY","$6c5e11070e371322$export$817eb92a8194bab0","Error","$6c5e11070e371322$var$uidCounter_","$6c5e11070e371322$export$5e82334337e0f204","obj","ol_uid","String","$c7ccf7e681a9b333$export$929e5a82286172a6","t","Math","pow","$c7ccf7e681a9b333$export$57636bb43b1ccbb0","$c7ccf7e681a9b333$export$9b47139b511b56e4","$c7ccf7e681a9b333$export$45db2fc2f15997e7","$0f235d2d04095c6e$export$2e2bcd8739ae039","Tile1","tileCoord","state","opt_options","options","interimTile","transition_","transition","transitionStarts_","interpolate","$0f235d2d04095c6e$var$__extends","changed","release","getKey","getInterimTile","tile","getState","refreshInterimChain","prev","getTileCoord","setState","load","getAlpha","id","time","start","delta","inTransition","endTransition","$08c28d22c0cb5a39$exports","default","$67c66761d21428d0$var$ua","navigator","userAgent","toLowerCase","$67c66761d21428d0$export$8442bdfd18b7b8a6","$67c66761d21428d0$export$39dfd62a25e0fe93","match","$67c66761d21428d0$export$76c0a3b101d93136","$67c66761d21428d0$export$6b83a0446fc26f94","devicePixelRatio","$67c66761d21428d0$export$98fcef3dc9973292","WorkerGlobalScope","OffscreenCanvas","self","$67c66761d21428d0$export$716f8695eedb9bad","Image","decode","$67c66761d21428d0$export$f751ce96c6c4e4fc","passive","defineProperty","get","window","error","$075f937d7366f1a2$export$9e05d10eae75c464","opt_width","opt_height","opt_canvasPool","opt_Context2DSettings","canvas","shift","document","createElement","width","height","getContext","$075f937d7366f1a2$export$5542201de9311ab2","newNode","oldNode","parent","parentNode","replaceChild","$075f937d7366f1a2$export$1d0aa160432dfea5","node","removeChild","$075f937d7366f1a2$export$1e1c9bf5a4ffe0d1","lastChild","$075f937d7366f1a2$export$caeacfe04f52533a","children","oldChildren","childNodes","oldChild","newChild","insertBefore","appendChild","$5edd00bd92be9cf8$export$2e2bcd8739ae039","ImageBase1","extent","resolution","pixelRatio","pixelRatio_","$5edd00bd92be9cf8$var$__extends","getExtent","getImage","getPixelRatio","getResolution","$7eb75c96a6b6f2c6$export$2e2bcd8739ae039","$2f35615121725455$export$2e2bcd8739ae039","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","$dab4245bc22b806c$export$2e2bcd8739ae039","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","$40658b5e833b516b$export$2e2bcd8739ae039","AssertionError1","code","message","split","name","$40658b5e833b516b$var$__extends","$35d5ec884318008e$export$a7a9523472993e97","assertion","errorCode","$40658b5e833b516b$exports","$6da4c8ed3074c92b$export$8aceca7c77505534","coordinates","$6da4c8ed3074c92b$export$fe201bb3bbe031e9","$6da4c8ed3074c92b$export$1f820e3920fa5715","$6da4c8ed3074c92b$export$ab1029bcae9ddb4a","value","opt_extent","$6da4c8ed3074c92b$export$9cd59f9826255e47","slice","$6da4c8ed3074c92b$export$cbe64c389534206f","x","y","dx","dy","$6da4c8ed3074c92b$export$ac68c24d37ca240f","coordinate","$6da4c8ed3074c92b$export$805bdfd6d6690e97","$6da4c8ed3074c92b$export$be866b1e0809b17e","extent1","extent2","$6da4c8ed3074c92b$export$f97905ead28c61a8","minX","minY","maxX","maxY","relationship","Infinity","$6da4c8ed3074c92b$export$958e3e1a02eac4b6","$6da4c8ed3074c92b$export$3e2152b047719fa1","$6da4c8ed3074c92b$export$e9bab7fafb253603","$6da4c8ed3074c92b$export$30570204156ffd18","flatCoordinates","offset","stride","$6da4c8ed3074c92b$export$f1dab130b92b85a9","min","max","$6da4c8ed3074c92b$export$f9ed8a3d123a08e2","callback","val","$6da4c8ed3074c92b$export$8d09f5e2e1bf560d","$6da4c8ed3074c92b$export$e77c1cf70445e168","$6da4c8ed3074c92b$export$b84fa077c8b05295","$6da4c8ed3074c92b$export$cb1538b07e6964ff","$6da4c8ed3074c92b$export$520c40045967cb15","area","$6da4c8ed3074c92b$export$dd1bc94b04021eeb","$6da4c8ed3074c92b$export$3c49c185de0c2bfc","$6da4c8ed3074c92b$export$c08559766941f856","$6da4c8ed3074c92b$export$c91255cadecfe081","$6da4c8ed3074c92b$export$a1cfd206661d0801","corner","$6da4c8ed3074c92b$export$13ba650faf8308","center","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","$6da4c8ed3074c92b$export$72209efa88586d42","intersection","$6da4c8ed3074c92b$export$7b0a31e10bbff018","$6da4c8ed3074c92b$export$6a4fe494c558c238","$6da4c8ed3074c92b$export$a6a5a7a461419425","intersects1","startRel","endRel","startX","startY","endX","endY","slope","$6da4c8ed3074c92b$export$9f9dcb98c894b623","transformFn","opt_stops","xs","ys","l","apply","$6da4c8ed3074c92b$var$_boundingExtentXYs","$6da4c8ed3074c92b$export$39a9ce3624977b84","projection","projectionExtent","canWrapX","worldWidth","floor","$d5bf8abd656a3cdc$export$63174c828edd6ff8","opt_this","opt_once","bind","originalListener_1","eventsKey","$d5bf8abd656a3cdc$export$8d2a95bc11b44725","$d5bf8abd656a3cdc$export$b0a21c8b3c1c921","$b54439be79d4619a$export$bc96ecc7c2a50764","image","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","src","then","catch","forEach","ImageWrapper1","crossOrigin","imageLoadFunction","src_","image_","unlisten_","imageLoadFunction_","$b54439be79d4619a$var$__extends","handleImageError_","unlistenImage_","handleImageLoad_","setImage","$5edd00bd92be9cf8$exports","$cd3bc8d185522361$export$2e2bcd8739ae039","ImageTile1","tileLoadFunction","crossOrigin_","tileLoadFunction_","$cd3bc8d185522361$var$__extends","element","ctx","fillStyle","fillRect","naturalWidth","naturalHeight","$b54439be79d4619a$exports","listenImage","$0f235d2d04095c6e$exports","$03edbd434a9e6608$var$Units","RADIANS","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","$03edbd434a9e6608$export$1482081eec883108","PI","$03edbd434a9e6608$export$2e2bcd8739ae039","$6dc418afeec7068a$export$2e2bcd8739ae039","Projection1","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","$6b000a049d919fe5$export$7d15b64cf5a3a4c4","$6b000a049d919fe5$export$2e2fd1ad24e4d350","cosh","exp","$6b000a049d919fe5$export$b9fae0bba9d9094d","log2","log","LOG2E","$6b000a049d919fe5$export$251bb0a9cef172e6","$6b000a049d919fe5$export$88e6ebb4fe54f538","$6b000a049d919fe5$export$8240f01c446270e6","mat","maxRow","maxEl","abs","r","absValue","j","coef","k","m","$6b000a049d919fe5$export$56cb859c01fa134d","angleInRadians","$6b000a049d919fe5$export$cba01ba138429a1d","angleInDegrees","$6b000a049d919fe5$export$ba467bec01d66def","$6b000a049d919fe5$export$3a89f8d6f6bf6c9f","$6b000a049d919fe5$export$a81f732198733497","decimals","factor","round","$6b000a049d919fe5$export$a3fe094919f356fd","$6b000a049d919fe5$export$803ce6b71a0a94b2","ceil","$84ad988f04807ab1$export$f3928063e5e96d35","$84ad988f04807ab1$export$21e6da8a7375dfe8","$84ad988f04807ab1$export$ae9d6ed80df710e5","$84ad988f04807ab1$export$d26945d1ad52feeb","tan","$84ad988f04807ab1$var$EPSG3857Projection","EPSG3857Projection1","point","$84ad988f04807ab1$var$__extends","$84ad988f04807ab1$export$b508d7ad9a891c1b","$84ad988f04807ab1$export$1ff8bb36c0983070","input","opt_output","opt_dimension","dimension","$84ad988f04807ab1$export$8c71322ec28ed6b4","atan","$b58ae362632b32c5$export$21e6da8a7375dfe8","$b58ae362632b32c5$export$1482081eec883108","$b58ae362632b32c5$var$EPSG4326Projection","EPSG4326Projection1","opt_axisOrientation","$b58ae362632b32c5$var$__extends","$b58ae362632b32c5$export$b508d7ad9a891c1b","$f5ec5c943d804ecb$var$cache","$f5ec5c943d804ecb$export$e16d8520af44a096","$11b5dd198626e1de$var$transforms","$11b5dd198626e1de$export$e16d8520af44a096","destination","sourceCode","destinationCode","$11b5dd198626e1de$export$3988ae62b71be9a3","transform","$1bd0a226f9a16141$export$e9bab7fafb253603","coordinate1","coordinate2","equals1","$1bd0a226f9a16141$export$bb628a54ab399bc9","angle","cosAngle","sinAngle","$1bd0a226f9a16141$export$39a9ce3624977b84","worldsAway","$1bd0a226f9a16141$export$24e2b27d1ff0c1d5","opt_sourceExtentWidth","sourceExtentWidth","$419865bd7211e6e7$export$2e2bcd8739ae039","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","$fb75384508533d8f$export$79376507b09a66f","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","$fb75384508533d8f$export$cc800923e997bb8","distance","bearing","lon1","dByR","lat","asin","$9c4744460e43e41b$var$showCoordinateWarning","$9c4744460e43e41b$export$ed949affbc7c4223","opt_disable","$9c4744460e43e41b$export$dd516654c5f598fb","$9c4744460e43e41b$export$83e8ab53904f8022","$9c4744460e43e41b$export$59ae956cd3e343f7","$9c4744460e43e41b$export$3988ae62b71be9a3","projectionLike","replace","$9c4744460e43e41b$export$2d8f7b4eec383d44","opt_units","pointResolution","getter","toEPSG4326_1","$9c4744460e43e41b$export$e3c4995a701c26a3","vertices","$9c4744460e43e41b$export$eeb8392580a05a37","projections","$9c4744460e43e41b$export$638ad73f7aafb913","$9c4744460e43e41b$export$549167224996a0fb","defaultCode","$9c4744460e43e41b$export$b15d9668511529b9","opt_projection","$9c4744460e43e41b$export$51186ad6e864892a","$9c4744460e43e41b$export$fe091d73a555748b","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","$9c4744460e43e41b$export$fce0c6cfca85ed96","$9c4744460e43e41b$export$751c68e0e0efff79","projections2","forwardTransform","inverseTransform","$9c4744460e43e41b$var$userProjection","$9c4744460e43e41b$export$3973b77d5f6f2790","$9c4744460e43e41b$export$698f563af1ba02a5","$9c4744460e43e41b$export$d4b8ec0b96db1ee2","destProjection","console","warn","$9c4744460e43e41b$export$96bfd09e2cffb006","$9c4744460e43e41b$export$494be3a3a25689ca","$9c4744460e43e41b$export$b56bb8ad8b3a00e9","sourceUnits","userUnits","$84ad988f04807ab1$exports","PROJECTIONS","$b58ae362632b32c5$exports","fromEPSG4326","toEPSG4326","$2b0a118af78fb031$var$brokenDiagonalRendering_","$6be53f6edfbf1854$export$2e2bcd8739ae039","Triangulation1","sourceProj","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","c","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","d","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","$fa21ebc07613627d$export$ab6c91696bd3263e","imageSmoothingEnabled","msImageSmoothingEnabled","$fa21ebc07613627d$export$75f39f0ce198f93f","$2b0a118af78fb031$var$drawTestTriangle","u1","v1","u2","v2","beginPath","moveTo","lineTo","closePath","save","clip","restore","$2b0a118af78fb031$var$verifyBrokenDiagonalRendering","$2b0a118af78fb031$export$5fbb958059b7e71f","targetCenter","targetResolution","sourceCenter","sourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","$2b0a118af78fb031$export$16d356211d01f1cc","$2b0a118af78fb031$export$b3890eb0ae9dca99","triangulation","sources","gutter","opt_renderEdges","opt_interpolate","context","pixelRound","scale","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","drawImage","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","getImageData","$2b0a118af78fb031$var$isBrokenDiagonalRendering","ud","vd","step","steps","translate","strokeStyle","lineWidth","stroke","$398e350e33050c07$export$2e2bcd8739ae039","ReprojTile1","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","$398e350e33050c07$var$__extends","reproject_","z","getTileSize","leftToLoad_1","state1","sourceListenKey_1","e","unlistenSources_","setTimeout","$859b1614288c6316$export$2e2bcd8739ae039","LRUCache1","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","getCount","expireCache","keep","pop","clear","containsKey","f","entry","value_","key_","newer","older","remove","getKeys","getValues","peekLast","peekLastKey","peekFirstKey","set","setSize","$bf2a04496fadabc6$export$958e3e1a02eac4b6","opt_tileCoord","$bf2a04496fadabc6$export$92d0df0f1d25c63c","$bf2a04496fadabc6$export$a47fb462a08de82f","$bf2a04496fadabc6$export$a807b7874eb66454","map","Number","$bf2a04496fadabc6$export$d6af199866bfb566","$bf2a04496fadabc6$export$60bedf8e3e3c3dbe","getMinZoom","getMaxZoom","tileRange","getFullTileRange","containsXY","$a12e09565a34db59$export$2e2bcd8739ae039","TileCache1","$a12e09565a34db59$var$__extends","usedTiles","pruneExceptNewestZ","$7e3d7a0f8b272861$export$2e2bcd8739ae039","TILELOADSTART","TILELOADEND","TILELOADERROR","$e881b5dca21eb5d4$export$2e2bcd8739ae039","PROPERTYCHANGE","$1f093ab5083c8a1f$var$Observable","Observable1","on","onInternal","once","onceInternal","un","unInternal","revision_","$1f093ab5083c8a1f$var$__extends","getRevision","len","ol_key","$1f093ab5083c8a1f$export$b7ef3f8527533384","$1f093ab5083c8a1f$export$2e2bcd8739ae039","$b68b3d6e32e3074a$export$cf395d7c4a2d5a17","ObjectEvent1","oldValue","$b68b3d6e32e3074a$var$__extends","$b68b3d6e32e3074a$export$2e2bcd8739ae039","BaseObject1","opt_values","values_","setProperties","getProperties","hasProperties","notify","eventType","concat","addChangeListener","removeChangeListener","opt_silent","applyProperties","unset","$1f093ab5083c8a1f$exports","$98f5bfe3c4864f05$export$2e2bcd8739ae039","UNDEFINED","READY","$ed6dc99f268f3882$var$adaptAttributions","attributionLike","frameState","$ed6dc99f268f3882$export$2e2bcd8739ae039","Source1","attributions_","attributions","attributionsCollapsible_","attributionsCollapsible","loading","state_","wrapX_","wrapX","interpolate_","viewResolver","viewRejector","viewPromise_","Promise","resolve","reject","$ed6dc99f268f3882$var$__extends","getAttributions","getAttributionsCollapsible","getProjection","getResolutions","getView","getWrapX","getInterpolate","refresh","setAttributions","$b68b3d6e32e3074a$exports","$550e524b0d1b61d4$var$TileRange","TileRange1","contains","containsTileRange","equals","extend","getHeight","getSize","getWidth","intersects","$550e524b0d1b61d4$export$958e3e1a02eac4b6","$550e524b0d1b61d4$export$2e2bcd8739ae039","$cc435a5409103773$export$622c471beb1693c7","$cc435a5409103773$export$a71a825ff42fb8e1","opt_size","$bb602a307ef98bb5$var$tmpTileCoord","$bb602a307ef98bb5$export$2e2bcd8739ae039","TileGrid1","opt_strict","compare","zoomFactor","minZoom","resolutions_","resolutions","every","currentVal","res","origins","zoomFactor_","maxZoom","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","zoom","jj","forEachTileCoordParentTileRange","opt_tileRange","tileCoordExtent","getOrigin","getTileCoordChildTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getTileCoordForCoordAndZ","getTileCoordResolution","opt_direction","fullTileRanges","$5779655d81caea04$export$1f4812384df8a9c5","opt_maxZoom","opt_tileSize","opt_corner","$5779655d81caea04$var$resolutionsFromExtent","$5779655d81caea04$export$ce88871416242df8","$5779655d81caea04$export$7b5b6ef8fd55fac4","$5779655d81caea04$export$a251b12f5601c16f","$5779655d81caea04$export$39a9ce3624977b84","$5779655d81caea04$export$38500bbeccc864ff","xyzOptions","gridOptions","maxResolution","opt_maxResolution","half","$988a11d09320f6a8$var$TileSource","TileSource1","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileCache","$a12e09565a34db59$exports","cacheSize","tmpSize","tileOptions","zDirection","$988a11d09320f6a8$var$__extends","getTileCacheForProjection","forEachLoadedTile","tileCoordKey","covered","getGutterForProjection","setKey","getOpaque","getTile","getTileGrid","getTileGridForProjection","getTilePixelRatio","getTilePixelSize","ratio","getTileCoordForTileUrlFunction","updateCacheSize","tileCount","useTile","$ed6dc99f268f3882$exports","$988a11d09320f6a8$export$c571855c51e6c4b6","TileSourceEvent1","$988a11d09320f6a8$export$2e2bcd8739ae039","$91dd08a0f5859882$export$f0ecb46e90798741","template","zRegEx","xRegEx","yRegEx","dashYRegEx","toString","range","$91dd08a0f5859882$export$436f44dbcc31fea3","templates","tileUrlFunctions","$91dd08a0f5859882$export$4229b1d9af69b3be","$91dd08a0f5859882$export$2a1fa079bfd73dde","url","urls","exec","startCharCode","charCodeAt","stopCharCode","charCode","fromCharCode","stop_1","parseInt","$e6408236331c2614$export$2e2bcd8739ae039","UrlTile1","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","$e6408236331c2614$var$__extends","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","handleTileChange","uid","tileState","$988a11d09320f6a8$exports","TileSourceEvent","setTileLoadFunction","setTileUrlFunction","join","$51d055913ca55b5e$var$TileImage","TileImage1","imageSmoothing","$51d055913ca55b5e$var$defaultTileLoadFunction","tileClass","$cd3bc8d185522361$exports","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","$51d055913ca55b5e$var$__extends","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","z1","pixelRatio1","cache","newTile","$398e350e33050c07$exports","getTileInternal","setRenderReprojectionEdges","render","setTileGridForProjection","tilegrid","proj","$e6408236331c2614$exports","imageTile","$51d055913ca55b5e$export$2e2bcd8739ae039","$963a7ef65488964c$export$2e2bcd8739ae039","XYZ1","$963a7ef65488964c$var$__extends","$51d055913ca55b5e$exports","$6c8498cc816f2362$export$4de8a5e77eb994ad","$6c8498cc816f2362$export$2e2bcd8739ae039","OSM1","$6c8498cc816f2362$var$__extends","$963a7ef65488964c$exports","$f6d1853b3fcae320$export$2e2bcd8739ae039","OPACITY","VISIBLE","EXTENT","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MAX_ZOOM","MIN_ZOOM","SOURCE","MAP","$57c5f0299cb9b82f$export$2e2bcd8739ae039","BaseLayer1","background_","background","properties","opacity","visible","zIndex","minResolution","className_","className","$57c5f0299cb9b82f$var$__extends","getBackground","getClassName","getLayerState","opt_managed","layer","managed","getZIndex","getOpacity","getVisible","getMaxResolution","getMinResolution","getLayersArray","opt_array","getLayerStatesArray","opt_states","getSourceState","setBackground","opt_background","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$f5e92a4d985a2824$export$2e2bcd8739ae039","PRERENDER","POSTRENDER","PRECOMPOSE","POSTCOMPOSE","RENDERCOMPLETE","$534f30fce11effcd$export$acb1e9cb9ce4ca56","layerState","viewState","$534f30fce11effcd$export$2e2bcd8739ae039","Layer1","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","rendered","setMap","handleSourcePropertyChange_","setSource","$534f30fce11effcd$var$__extends","array","states","getSource","getRenderSource","handleSourceChange_","getFeatures","pixel","getData","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","setMapInternal","getMapInternal","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","$57c5f0299cb9b82f$exports","$e4c61536de922b84$export$2e2bcd8739ae039","PRELOAD","USE_INTERIM_TILES_ON_ERROR","$93be2de6a052f587$export$2e2bcd8739ae039","BaseTileLayer1","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","$93be2de6a052f587$var$__extends","getPreload","getUseInterimTilesOnError","$534f30fce11effcd$exports","$cb18cdefd702a327$export$2e2bcd8739ae039","LayerRenderer1","ready","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","$cb18cdefd702a327$var$__extends","loadedTileCallback","tiles","createLoadedTileFinder","forEachFeatureAtCoordinate","hitTolerance","matches","getDataAtPixel","getLayer","handleFontsChanged","renderIfReadyAndVisible","loadImage","imageState","$e22e7611e69f42a9$var$transformStringDiv","$b80dddceb0c42ad4$export$2e2bcd8739ae039","RenderEvent1","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","$b80dddceb0c42ad4$var$__extends","$e22e7611e69f42a9$export$adaa4cf7ef1b65be","$e22e7611e69f42a9$export$5635d7ef4b8fee1c","$e22e7611e69f42a9$export$3e4e33ea14aeb531","$e22e7611e69f42a9$export$f672e0b6f7222cd7","dx1","dy1","sx","sy","dx2","dy2","$e22e7611e69f42a9$export$bd70ea2a93c0fa4","det","$e22e7611e69f42a9$export$f84e8e69fd4488a5","transformString","style","$322346e1ff7894ca$var$HEX_COLOR_RE_","$322346e1ff7894ca$var$NAMED_COLOR_RE_","$322346e1ff7894ca$export$590567be997858b6","color","$322346e1ff7894ca$export$f84e8e69fd4488a5","$322346e1ff7894ca$var$fromNamed","el","body","rgb","getComputedStyle","$322346e1ff7894ca$export$3004f64547af360e","s","g","hasAlpha","substr","$322346e1ff7894ca$export$a3295358bff77e","$322346e1ff7894ca$var$fromStringInternal_","$322346e1ff7894ca$export$75093a47a9fa838d","$42152f52b26b6ca7$var$pixelContext","$42152f52b26b6ca7$export$2e2bcd8739ae039","CanvasLayerRenderer1","container","renderedResolution","tempTransform","pixelTransform","containerReused","pixelContext_","$42152f52b26b6ca7$var$__extends","col","row","clearRect","err","useContainer","opt_backgroundColor","layerClassName","backgroundColor","firstElementChild","HTMLCanvasElement","position","left","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","inverted","dispatchRenderEvent_","event_1","$b80dddceb0c42ad4$exports","preRender","postRender","getRenderTransform","offsetX","renderPixel","layerExtent","pixelToCoordinateTransform","pixelContext1","pixelCanvas","Uint8Array","$cb18cdefd702a327$exports","$ce07df6d5d4656f1$var$fontRegEx","RegExp","$ce07df6d5d4656f1$var$fontRegExMatchIndex","$ce07df6d5d4656f1$export$5abde8a6aec4a131","fontSpec","lineHeight","weight","variant","families","family","$ce07df6d5d4656f1$export$52ec625a6a53b6a6","$02fffef185f4339b$export$2e2bcd8739ae039","CanvasTileLayerRenderer1","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","$02fffef185f4339b$var$__extends","isDrawableTile","tileOrigin","tileResolution","layerIndex","viewResolution","viewCenter","tileSource","sourceRevision","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","canvasScale","canvasTransform","clips","clipZs","currentClip","zs","sort","reverse","currentZ","currentTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","originTileExtent","origin_1","tileGutter","tilesToDraw","xIndex","nextX","yIndex","nextY","w","h","contextSaved","i_1","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alpha","alphaChanged","globalAlpha","animate","frameState1","tileSource1","postRenderFunction","tileSourceKey","postRenderFunctions","opt_tileCallback","wantedTiles","tileQueue","isKeyQueued","enqueue","$42152f52b26b6ca7$exports","$32e67a4d3559554a$export$2e2bcd8739ae039","TileLayer1","$32e67a4d3559554a$var$__extends","$02fffef185f4339b$exports","$93be2de6a052f587$exports","$176ca75ee9f69668$exports","t1","t2","r2","e2","a2","h2","o","u","p","i1","n1","r1","_maxEntries","_minEntries","e1","a1","h1","p1","o1","leaf","s1","l1","f1","m1","d1","all","_all","search","toBBox","collides","insert","_build","_splitRoot","_insert","_condense","compareMinX","compareMinY","toJSON","fromJSON","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","$e60011aea38e6239$export$2e2bcd8739ae039","ImageStyle1","opacity_","rotateWithView_","rotateWithView","rotation_","scale_","scaleArray_","displacement_","displacement","clone","getScale","getRotation","getRotateWithView","getDisplacement","getScaleArray","getAnchor","getHitDetectionImage","getImageState","getImageSize","setDisplacement","setRotateWithView","setRotation","setScale","listenImageChange","unlistenImageChange","$e0807f400ec9a0a9$export$dc5b1400ac3a10a8","$d4aabc5c971073f1$export$e21b4112fdc612fc","$d4aabc5c971073f1$export$40a9eeef55665a40","$d4aabc5c971073f1$export$1d36981fcadac93b","$d4aabc5c971073f1$var$measureFont","measureElement","$d4aabc5c971073f1$var$measureContext","$d4aabc5c971073f1$export$7fdcec604f0b1fa7","$d4aabc5c971073f1$export$a534074a28fa87ff","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$d4aabc5c971073f1$export$4ea92329b673abd1","check","done","fonts","font","clearInterval","setInterval","$d4aabc5c971073f1$export$4feaf6852ff92513","metrics","$d4aabc5c971073f1$var$measureText","isNaN","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","display","offsetHeight","measureText","$d4aabc5c971073f1$export$915c7ba51467308f","$d4aabc5c971073f1$export$7d7c13020df1e791","baseStyle","chunks","widths","heights","lineWidths","currentWidth","currentHeight","$d4aabc5c971073f1$export$3cb6f3a6e49cc0ee","labelOrImage","originX","originY","setTransform","contextInstructions","label","$d4aabc5c971073f1$var$executeLabelInstructions","$3e99c452138b2224$export$2e2bcd8739ae039","RegularShape1","hitDetectionCanvas_","fill_","fill","points_","points","radius_","radius1","radius2_","radius2","angle_","stroke_","size_","renderOptions_","$3e99c452138b2224$var$__extends","getFill","getPoints","getRadius","getRadius2","getAngle","getStroke","createHitDetectionCanvas_","renderOptions","draw_","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","lineDash","lineDashOffset","getColor","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","add","maxRadius","createPath_","setLineDash","drawHitDetectionCanvas_","arc","startAngle","angle0","radiusC","$06150d8570b7481b$export$2e2bcd8739ae039","CircleStyle1","$06150d8570b7481b$var$__extends","setRadius","$3e99c452138b2224$exports","$d61d1dcaf3c44610$export$2e2bcd8739ae039","Fill1","color_","setColor","$f9d0329c5c745263$export$2e2bcd8739ae039","Stroke1","lineCap_","lineCap","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","getLineCap","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","$8c7f6dda98e8cb9c$var$Style","Style1","geometry_","geometryFunction_","$8c7f6dda98e8cb9c$var$defaultGeometryFunction","geometry","setGeometry","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","getGeometry","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setFill","setStroke","setText","feature","$8c7f6dda98e8cb9c$export$c314ea3f6b164147","styleFunction","styles_1","$8c7f6dda98e8cb9c$var$defaultStyles","$8c7f6dda98e8cb9c$export$6865c5ac2f5ce8b6","$06150d8570b7481b$exports","$8c7f6dda98e8cb9c$export$2e2bcd8739ae039","$c8d6dc4c09ed9916$var$Property","$c8d6dc4c09ed9916$export$2e2bcd8739ae039","BaseVectorLayer1","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","$c8d6dc4c09ed9916$var$__extends","getDeclutter","getRenderBuffer","getRenderOrder","getStyle","getStyleFunction","getUpdateWhileAnimating","getUpdateWhileInteracting","renderDeclutter","declutterTree","$parcel$interopDefault","setRenderOrder","renderOrder","opt_style","$cf547866e052f25b$var$Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","$cf547866e052f25b$export$f21891651e408226","$cf547866e052f25b$export$7a98aa5364d62ba8","$cf547866e052f25b$export$9f746cc58a899a00","$cf547866e052f25b$export$89b10f327e413e71","$cf547866e052f25b$export$2e2bcd8739ae039","$eb0e5c3938110b4c$export$2e2bcd8739ae039","VectorContext1","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterImageWithText","setTextStyle","textStyle","$5454470599558ddd$export$9c0934e4e9c3f61e","opt_coordinates","$5454470599558ddd$export$cbb9596fc0f40db2","ends","opt_coordinatess","coordinatess","$5454470599558ddd$export$915c7058aeb4dfeb","endss","opt_coordinatesss","coordinatesss","$2bb20f8873deb436$export$2e2bcd8739ae039","CanvasBuilder1","tolerance","maxExtent","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","$2bb20f8873deb436$var$__extends","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","tmpCoord","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","getType","getStride","builderBegin","getOrientedFlatCoordinates","getEndss","myEnds","getFlatCoordinates","getEnds","endGeometry","finish","reverseHitDetectionInstructions","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","$b652f9dd73b29cfe$export$2e2bcd8739ae039","CanvasImageBuilder1","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","$b652f9dd73b29cfe$var$__extends","myBegin","opt_sharedData","anchor","hitDetectionImage","$2bb20f8873deb436$exports","$a207f23baa5aa2c5$export$2e2bcd8739ae039","CanvasLineStringBuilder1","$a207f23baa5aa2c5$var$__extends","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","$8780aae6970f5f65$export$ef693d1572e64fb8","squaredTolerance","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","$8780aae6970f5f65$export$51a0620f7a28532b","$8780aae6970f5f65$export$b84e8d2c4920a0c6","$8780aae6970f5f65$export$60a9904b67f8d51b","simplifiedEnds","$7d2e8ba11a45ae8a$export$2e2bcd8739ae039","CanvasPolygonBuilder1","$7d2e8ba11a45ae8a$var$__extends","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","$27569314e3df91c2$export$2e2bcd8739ae039","LINE","$79529ab61b92f869$export$ed6c897eea07a254","maxAngle","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","$8243e906fae47bbe$export$91a016276e4aee96","right","top","middle","hanging","alphabetic","ideographic","bottom","$8243e906fae47bbe$export$2e2bcd8739ae039","CanvasTextBuilder1","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","$8243e906fae47bbe$var$__extends","fillState","strokeState","textState","geometryType","placement","geometryWidths","overflow","getFlatMidpoint","getCenter","getFlatMidpoints","getFlatInteriorPoint","interiorPoints","getFlatInteriorPoints","beg_1","filter","saveTextStates_","backgroundFill","backgroundStroke","p0","p2","p3","pixelRatio_1","NaN","textAlign","flatOffset","flatEnd","oo","drawChars_","strokeKey","textKey","textBaseline","fillKey","baseline","offsetY","textFillStyle","textStrokeStyle","getFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","$e22658f4b743550b$var$BATCH_CONSTRUCTORS","Circle","$7d2e8ba11a45ae8a$exports","Default","$b652f9dd73b29cfe$exports","LineString","$a207f23baa5aa2c5$exports","Polygon","Text","$8243e906fae47bbe$exports","$e22658f4b743550b$export$2e2bcd8739ae039","BuilderGroup1","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","$e74ccf0666398498$export$2e2bcd8739ae039","DEFAULT","IMAGE","TEXT","$14c6e714516e527b$export$b92b2dedcfff79de","opt_dest","dest","$14c6e714516e527b$export$bb628a54ab399bc9","anchorX","anchorY","deltaX","deltaY","$14c6e714516e527b$export$dcdf75081b88279d","$14c6e714516e527b$export$d73ee8ef04f5226a","$f6421f31729929e6$export$153a9a17ab3e949f","startM","measureAndCacheTextWidth","segmentLength","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","result","singleSegment","iStart","charLength","chars","substring","$bf04349d827c1d16$export$153f8c6b4d8caebc","$6526fa4ee42dc39d$var$tmpExtent","$6526fa4ee42dc39d$var$p1","$6526fa4ee42dc39d$var$p2","$6526fa4ee42dc39d$var$p3","$6526fa4ee42dc39d$var$p4","$6526fa4ee42dc39d$var$getDeclutterBox","replayImageOrLabelArgs","declutterBox","$6526fa4ee42dc39d$var$rtlRegEx","$6526fa4ee42dc39d$var$horizontalTextAlign","align","test","TEXT_ALIGN","$6526fa4ee42dc39d$var$createTextChunks","acc","line","$6526fa4ee42dc39d$export$2e2bcd8739ae039","Executor1","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","textIsArray","reduce","_a","renderWidth","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","previousFont","leftRight","strokeInstructions","fillInstructions","lineOffset","widthHeightIndex","lineWidthIndex","text_1","fillStrokeArgs","replayTextBackground_","p11","p21","p31","p41","strokeInstruction","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","centerX","centerY","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","repeatSize","rotate","drawLabelWithPointPlacement_","execute_","opt_featureCallback","opt_hitExtent","opt_declutterTree","pixelCoordinates","transform1","transform2","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","fn","coords","declutterImageWithText","labelWithAnchor","widthIndex","args","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","ii_1","execute","executeHitDetection","$a34a824d875e4ea1$var$ORDER","$a34a824d875e4ea1$var$ExecutorGroup","ExecutorGroup1","allInstructions","opt_renderBuffer","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","hitExtent","indexes","$a34a824d875e4ea1$var$circlePixelIndexArrayCache","maxDistanceSq","distances","distanceSq","pixelIndex","$a34a824d875e4ea1$export$96fc84ea21b8269f","featureCallback","imageData","idx","result_1","executor","isEmpty","opt_builderTypes","builderTypes","$a34a824d875e4ea1$export$2e2bcd8739ae039","$7d362782b4ccb93d$export$2e2bcd8739ae039","ANIMATING","INTERACTING","$50db89a00eb954f6$var$tmpTransform","$50db89a00eb954f6$export$2e2bcd8739ae039","Geometry1","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","opt_transform","getSimplifiedGeometry","applyTransform","nextArgs","$50db89a00eb954f6$var$__extends","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","opt_closestPoint","intersectsCoordinate","computeExtent","opt_sy","opt_anchor","simplify","intersectsExtent","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$42282ac5c8474df1$export$2e2bcd8739ae039","XY","XYZ","XYM","XYZM","$c76e993e57efc8c4$export$6af0c1b4a8549a43","layout","$c76e993e57efc8c4$export$a3767472617c7861","simpleGeometry","$c76e993e57efc8c4$export$2e2bcd8739ae039","SimpleGeometry1","$c76e993e57efc8c4$var$__extends","getCoordinates","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","$c76e993e57efc8c4$var$getLayoutForStride","$50db89a00eb954f6$exports","$7b0c2128a27f5020$export$2e2bcd8739ae039","CanvasImmediateRenderer1","opt_squaredTolerance","opt_userTransform","context_","transform_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","$7b0c2128a27f5020$var$__extends","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","$c76e993e57efc8c4$exports","transformGeom2D","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imageAnchor","imageOrigin","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","$61c65c2463af340d$export$2e2bcd8739ae039","FRACTION","$546509bca2d85ec0$export$2e2bcd8739ae039","$f351daabfe6e2d22$var$IconImageCache","IconImageCache1","cache_","cacheSize_","maxCacheSize_","expire","iconImage","$f351daabfe6e2d22$var$getKey","maxCacheSize","$f351daabfe6e2d22$export$747ccdf771a87ab8","$0e5ad1d3b638689e$var$taintedTestContext","$0e5ad1d3b638689e$var$IconImage","IconImage1","imageState_","tainted_","$0e5ad1d3b638689e$var$__extends","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","imgData","putImageData","$0e5ad1d3b638689e$export$3988ae62b71be9a3","$8463d325b53eeb0c$export$2e2bcd8739ae039","Icon1","anchor_","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","imgSize_","imgSize","iconImage_","$0e5ad1d3b638689e$exports","offset_","offsetOrigin_","offsetOrigin","$8463d325b53eeb0c$var$__extends","setAnchor","iconImageSize","$944be50faeff5321$export$2e2bcd8739ae039","Text1","font_","textAlign_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","padding_","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","$13dfa0283bf5c35f$export$bd05e394339d469","transforms","features","$7b0c2128a27f5020$exports","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","styles","originalStyle","imgContext","$8463d325b53eeb0c$exports","byGeometryType","zIndexKeys","geomAndStyle","kk","$13dfa0283bf5c35f$export$6d4d555ddbfffa32","resultFeatures","$4b9ac454600c05d2$var$GEOMETRY_RENDERERS","Point","builderGroup","opt_declutterBuilderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","replayGroup","geometryRenderer","circleReplay","$4b9ac454600c05d2$export$531ddd8416d52dfc","feature1","feature2","$4b9ac454600c05d2$export$75084a70d324c1e6","$4b9ac454600c05d2$export$bdacc5b475012edb","$4b9ac454600c05d2$export$36f470a33a42f413","$4b9ac454600c05d2$var$renderGeometry","$4b9ac454600c05d2$var$renderFeatureInternal","getGeometries","$659e0e97392a5f5e$export$2e2bcd8739ae039","CanvasVectorLayerRenderer1","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","$659e0e97392a5f5e$var$__extends","renderWorlds","executorGroup","vectorSource","viewHints","multiWorld","endWorld","world","clipped","lastIndexOf","executorGroups","item","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","renderedExtent","loadExtents","loadExtent","declutterBuilderGroup","userTransform","userProjection","userExtent_1","loadFeatures","dirty","renderFeature","userExtent","getFeaturesInExtent","replayGroupInstructions","getOverlaps","$82a68515bd6ef378$export$2e2bcd8739ae039","VectorLayer1","$82a68515bd6ef378$var$__extends","$659e0e97392a5f5e$exports","$c8d6dc4c09ed9916$exports","$9fd014ab6df63665$export$bb06ddfd5d66e02e","$9fd014ab6df63665$export$2e2bcd8739ae039","Feature1","opt_geometryOrProperties","id_","geometryName_","geometryChangeKey_","handleGeometryChanged_","$9fd014ab6df63665$var$__extends","setGeometryName","getGeometryName","getId","handleGeometryChange_","setId","$b370ab32454a96fd$var$expireIconCache","$b370ab32454a96fd$export$2e2bcd8739ae039","MapRenderer1","map_","$b370ab32454a96fd$var$__extends","dispatchRenderEvent","calculateMatrices2D","checkWrapped","thisArg","layerFilter","thisArg2","translatedCoordinate","offsets","layerStates","numLayers","layer1","inView","callback_1","order","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","$fa78c97693b12120$export$2e2bcd8739ae039","CompositeMapRenderer1","fontChangeListenerKey_","redrawText","element_","getViewport","firstChild","children_","renderedVisible_","$fa78c97693b12120$var$__extends","declutterLayers","previousElement","sourceState","$b370ab32454a96fd$exports","$161dd067fe2d672c$export$2e2bcd8739ae039","ADD","REMOVE","$931ffc4e747c14db$var$Property","$931ffc4e747c14db$export$a87ae6eb2761ec6d","CollectionEvent1","opt_element","opt_index","$931ffc4e747c14db$var$__extends","$931ffc4e747c14db$export$2e2bcd8739ae039","Collection1","unique_","unique","array_","assertUnique_","updateLength_","getLength","getArray","insertAt","elem","removeAt","setAt","opt_except","$0b703156bb914e6f$export$2f5ff21d758d25a7","GroupEvent1","$0b703156bb914e6f$var$__extends","$0b703156bb914e6f$var$Property","$0b703156bb914e6f$export$2e2bcd8739ae039","LayerGroup1","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","$931ffc4e747c14db$exports","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","$3a171922c3a0c5ed$export$2e2bcd8739ae039","MapEvent1","$3a171922c3a0c5ed$var$__extends","$a1b91f073c6a6c43$export$2e2bcd8739ae039","MapBrowserEvent1","originalEvent","opt_dragging","pixel_","coordinate_","dragging","$a1b91f073c6a6c43$var$__extends","getEventPixel","getCoordinateFromPixel","$3a171922c3a0c5ed$exports","$150f412a4a7fa263$export$2e2bcd8739ae039","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$d564567e31203d44$export$2e2bcd8739ae039","$6085d006f9d0efe2$export$2e2bcd8739ae039","MapBrowserEventHandler1","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","$6085d006f9d0efe2$var$__extends","emulateClick_","pointerEvent","newEvent1","$a1b91f073c6a6c43$exports","clearTimeout","newEvent","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","$e4ad75f913b6f7ff$export$2e2bcd8739ae039","MOVESTART","MOVEEND","LOADSTART","LOADEND","$07fa325567004bb7$export$2e2bcd8739ae039","LAYERGROUP","SIZE","TARGET","VIEW","$716c6804ea170b71$export$2e2bcd8739ae039","PriorityQueue1","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$4c51fd53052a6bbc$export$2e2bcd8739ae039","TileQueue1","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","$4c51fd53052a6bbc$var$__extends","added","getTilesLoading","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","$4c51fd53052a6bbc$export$f08ad5eceeff5d45","tileCenter","$d35baefbe89be4c5$export$2e2bcd8739ae039","CENTER","RESOLUTION","ROTATION","$b21a6e049949bb31$export$c2f0af2c946f6897","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","$b21a6e049949bb31$export$f883a24d5edde77c","$bac43a1f4a628548$var$getViewportClampedResolution","viewportSize","showFullExtent","xResolution","yResolution","$bac43a1f4a628548$var$getSmoothClampedResolution","$bac43a1f4a628548$export$d65a517690fc4385","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","capped","$bac43a1f4a628548$export$22ac0f6b219de91a","power","opt_minResolution","minZoomLevel","cappedZoomLevel","zoomLevel","$bac43a1f4a628548$export$1c4e6da9b4b066fe","$d65f0a322291d127$export$e20fbacbb41798b","$d65f0a322291d127$export$f883a24d5edde77c","$bf5604c1b8258b71$var$assignClosest","offset1","offset2","$bf5604c1b8258b71$export$bc2eb611ddf80103","squaredDelta","$bf5604c1b8258b71$export$fbf31c8f2668ed5a","$bf5604c1b8258b71$export$4adc8e5135fb44c","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","$bf5604c1b8258b71$export$5a48a0eefcf14992","$6b086aa46281540d$export$60815ead40ec79ab","$6b086aa46281540d$export$5c4daf67e03c190f","$6b086aa46281540d$export$47c3746a74384d45","opt_ends","$01ff26a2f986a1d0$export$3c5e1905f889266e","twiceArea","$01ff26a2f986a1d0$export$7a8ee541dfdf2ed5","$548636579b4087f2$export$2e2bcd8739ae039","LinearRing1","maxDelta_","maxDeltaRevision_","$548636579b4087f2$var$__extends","getArea","$6eced4c969949f6b$export$2e2bcd8739ae039","Point1","$6eced4c969949f6b$var$__extends","$239aa88e7a573859$export$cedabedc7ac0e138","$239aa88e7a573859$export$949a7a3a4b6f34fa","wn","$239aa88e7a573859$export$ae868c0f6acc3355","$2166f19777f69377$export$50e3b25928a5e892","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","$3e64078bffae1cbd$export$4b80e395e36b5a56","ret","$acee589e5b390c5c$export$40d8d71841a3d779","coordinatesExtent","point1","point2","$acee589e5b390c5c$export$76dcd8f8f83b6ddb","$acee589e5b390c5c$export$830a0dafbb2ef1c5","$155dc783a4ec227e$export$741858880c96b18c","$7892dc06ffd23218$export$318f2842ed17e094","edge","$7892dc06ffd23218$export$f27cd06e85f4ba28","opt_right","isClockwise","$7892dc06ffd23218$export$b71b604ddfc778c7","$40aa8d43bbe572bf$var$Polygon","Polygon1","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","$40aa8d43bbe572bf$var$__extends","appendLinearRing","linearRing","polygon","flatCenter","getInteriorPoint","$6eced4c969949f6b$exports","getLinearRingCount","getLinearRing","$548636579b4087f2$exports","getLinearRings","linearRings","$40aa8d43bbe572bf$export$2e2bcd8739ae039","$40aa8d43bbe572bf$export$f99d756c6d81ae3f","opt_n","opt_sphereRadius","$40aa8d43bbe572bf$export$c16b671815801c75","$40aa8d43bbe572bf$export$2451009d645fb8c2","circle","opt_sides","opt_angle","sides","arrayLength","$40aa8d43bbe572bf$export$87d6a1539a56e47f","$70364d0195659942$var$animationCallback","returnValue","$70364d0195659942$export$964345001ee9ac52","smoothExtentConstraint","constrainOnlyCenter","$70364d0195659942$export$c68d65f9148da196","resolutionConstraint","smoothResolutionConstraint","projExtent","constrainResolution","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","constraint","$70364d0195659942$export$4eeaa08dd550e3c0","theta","opt_tolerance","enableRotation","constrainRotation","$70364d0195659942$export$ee75376562060184","animation","sourceRotation","targetRotation","$70364d0195659942$var$calculateCenterOn","rotX","rotY","$70364d0195659942$export$2e2bcd8739ae039","View1","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","$70364d0195659942$var$__extends","resolutionConstraintInfo","maxResolution_","minResolution_","minZoom_","centerConstraint","rotationConstraint","constraints_","setCenterInternal","setResolution","setZoom","oldPadding","newPadding","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","var_args","isDef","getAnimating","resolveConstraints","animateInternal","animationCount","Date","now","series","complete","duration","easing","getResolutionForZoom","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","setViewportSize","getConstraints","getConstrainResolution","getHints","opt_hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nextCenter","nextResolution","nextRotation","nearest","baseLevel","fit","geometryOrExtent","$40aa8d43bbe572bf$exports","fromExtent","fitInternal","rotatedExtentForGeometry","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","targetRes","$cceb59c4bc2a46b0$var$removeLayerMapProperty","$0b703156bb914e6f$exports","$cceb59c4bc2a46b0$var$setLayerMapProperty","$cceb59c4bc2a46b0$export$2e2bcd8739ae039","PluggableMap1","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","view","$70364d0195659942$exports","$cceb59c4bc2a46b0$var$createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","overlays_","overlayIdIndex_","postRenderFunctions_","tileQueue_","$4c51fd53052a6bbc$exports","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","control","interaction","$cceb59c4bc2a46b0$var$__extends","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","handleLayerAdd_","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","getAllLayers","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","getTarget","getTargetElement","getOverlayById","group","getLoadingOrNotReady","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getOverlayContainer","getOverlayContainerStopEvent","targetElement","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","documentElement","interactionsArray","getActive","handlePostRender","hints","lowOnFrameBudget","$6085d006f9d0efe2$exports","defaultView","updateSize","handleViewPropertyChanged_","updateViewportSize_","GroupEvent","handleLayerRemove_","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","mapId","renderTargets","nextExtent","setLayerGroup","oldLayerGroup","computedStyle","offsetWidth","parseFloat","getClientRects","$b978dafe8f7d27ff$export$2e2bcd8739ae039","Control1","target_","$b978dafe8f7d27ff$var$__extends","mapEvent","$6a26ab11104d2c24$export$2e2bcd8739ae039","Attribution1","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","$6a26ab11104d2c24$var$__extends","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","setCollapsible","updateElement_","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$b978dafe8f7d27ff$exports","$a305cff1f91b3b86$export$2e2bcd8739ae039","Rotate1","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","$a305cff1f91b3b86$var$__extends","resetNorth_","$4901e3e27e30416a$export$2e2bcd8739ae039","Zoom1","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","$4901e3e27e30416a$var$__extends","zoomByDelta_","currentZoom","newZoom","$b4471d80e1d69273$export$ebe90cb607ad99e","$4901e3e27e30416a$exports","zoomOptions","$a305cff1f91b3b86$exports","rotateOptions","attribution","$6a26ab11104d2c24$exports","attributionOptions","$2c9e42723ccf2bfb$export$2e2bcd8739ae039","ACTIVE","$39210df8527e63e5$export$4c486572e961a974","$39210df8527e63e5$export$ace321ff2a8016ef","$39210df8527e63e5$export$2e2bcd8739ae039","Interaction1","setActive","$39210df8527e63e5$var$__extends","active","$b50403621294a654$export$2e2bcd8739ae039","DoubleClickZoom1","delta_","$b50403621294a654$var$__extends","stopEvent","shiftKey","$39210df8527e63e5$exports","zoomByDelta","$cf1eb502962d87a8$export$e2a20c553f6c85ce","$cf1eb502962d87a8$export$2e2bcd8739ae039","PointerInteraction1","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","$cf1eb502962d87a8$var$__extends","getPointerCount","updateTrackedPointers_","handledUp","handled","$cf1eb502962d87a8$var$isPointerDraggingEvent","$edf87b50170125f7$export$84bf76cd7afc7469","conditions","pass","$edf87b50170125f7$export$4e5f01653f9f1f82","altKey","metaKey","ctrlKey","$edf87b50170125f7$export$ae2cdf064e3b0c55","hasAttribute","activeElement","$edf87b50170125f7$export$d7ddd398f22d79ef","$edf87b50170125f7$export$ba9e5d519bc326ca","$edf87b50170125f7$export$1238ad6b5e7fff70","$edf87b50170125f7$export$fdc892d0d8fe3bfb","$edf87b50170125f7$export$5d31fe68a477cfbb","$edf87b50170125f7$export$e5570ca80cd8fd54","tagName","$edf87b50170125f7$export$abb7acbfa76bf3c4","pointerType","$edf87b50170125f7$export$189f0d593022b199","isPrimary","$c11585da26a016db$export$2e2bcd8739ae039","DragPan1","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","$c11585da26a016db$var$__extends","scale1","centroid","$cf1eb502962d87a8$exports","update","getDistance","centerpx","$197c7092261b2aa0$export$2e2bcd8739ae039","DragRotate1","lastAngle_","$197c7092261b2aa0$var$__extends","$c47adf75308683a6$export$2e2bcd8739ae039","RenderBox1","startPixel_","endPixel_","$c47adf75308683a6$var$__extends","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","$e05f414bc3918235$var$DragBoxEventType","$e05f414bc3918235$export$7053c33c051365ea","DragBoxEvent1","$e05f414bc3918235$var$__extends","$e05f414bc3918235$export$2e2bcd8739ae039","DragBox1","box_","$c47adf75308683a6$exports","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$afc7f51010a5b660$export$2e2bcd8739ae039","DragZoom1","out_","out","$afc7f51010a5b660$var$__extends","$e05f414bc3918235$exports","$82662515908d12f9$export$2e2bcd8739ae039","UP","DOWN","$178bb1517d626802$export$2e2bcd8739ae039","KeyboardPan1","defaultCondition_","pixelDelta_","pixelDelta","$178bb1517d626802$var$__extends","keyEvent","keyCode","mapUnitsDelta","pan","$2237fabfa170eefc$export$2e2bcd8739ae039","KeyboardZoom1","$2237fabfa170eefc$var$__extends","$9a54ea8d5f7a49ee$export$2e2bcd8739ae039","Kinetic1","decay","minVelocity","delay","decay_","minVelocity_","delay_","initialVelocity_","lastIndex","firstIndex","$aaa378764710d71e$export$9484bbecc3c49a2e","TRACKPAD","$aaa378764710d71e$export$2e2bcd8739ae039","MouseWheelZoom1","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","$aaa378764710d71e$var$__extends","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$9727451f2459496c$export$2e2bcd8739ae039","PinchRotate1","pointerOptions","rotating_","rotationDelta_","threshold_","threshold","$9727451f2459496c$var$__extends","rotationDelta","touch0","touch1","$79c946b60b88d4a6$export$2e2bcd8739ae039","PinchZoom1","lastDistance_","lastScaleDelta_","$79c946b60b88d4a6$var$__extends","scaleDelta","$fdc8b40501c0cf45$export$ebe90cb607ad99e","altShiftDragRotate","$197c7092261b2aa0$exports","doubleClickZoom","$b50403621294a654$exports","zoomDelta","zoomDuration","dragPan","$c11585da26a016db$exports","pinchRotate","$9727451f2459496c$exports","pinchZoom","$79c946b60b88d4a6$exports","keyboard","$178bb1517d626802$exports","$2237fabfa170eefc$exports","mouseWheelZoom","$aaa378764710d71e$exports","shiftDragZoom","$afc7f51010a5b660$exports","$41aa29ae0c4b607a$export$2e2bcd8739ae039","Map1","$41aa29ae0c4b607a$var$__extends","$fa78c97693b12120$exports","$cceb59c4bc2a46b0$exports","$43ed5485a1d0c509$export$687ff82efd78795b","length_1","cumulativeLengths","$43ed5485a1d0c509$export$8f44c3c220ef6f09","extrapolate","lo","hi","m0","$292e4002746c8223$export$2e2bcd8739ae039","LineString1","flatMidpoint_","flatMidpointRevision_","$292e4002746c8223$var$__extends","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","$ec084d0ff9c13a22$export$2e2bcd8739ae039","FeatureFormat1","dataProjection","defaultFeatureProjection","supportedMediaTypes","getReadOptions","readProjection","featureProjection","adaptOptions","readFeature","readFeatures","readGeometry","writeFeature","writeFeatures","writeGeometry","$ec084d0ff9c13a22$export$7beeea566b560d4","write","transformed","power_1","$fdcc6dd70a9488b9$export$2e2bcd8739ae039","ARRAY_BUFFER","JSON","XML","$2e03ce1a961db7fd$var$getText","$2e03ce1a961db7fd$export$2e2bcd8739ae039","TextFeature1","$2e03ce1a961db7fd$var$__extends","readFeatureFromText","readFeaturesFromText","readGeometryFromText","readProjectionFromText","writeFeatureText","writeFeaturesText","writeGeometryText","$2c961def76495a52$export$42498d737b05108d","opt_destOffset","destOffset","$f9d2f7bcee7d91f9$export$f7f7aa721fb1892a","numbers","opt_factor","lastNumbers","num","$f9d2f7bcee7d91f9$export$a184f75f22d08c53","$f9d2f7bcee7d91f9$export$6dd1849a130b98c5","encoded","$f9d2f7bcee7d91f9$export$699b9297c43854f5","$f9d2f7bcee7d91f9$export$3625268a2f372206","$f9d2f7bcee7d91f9$export$8f60e357408ce6f6","$f9d2f7bcee7d91f9$export$c4734ac5b9f48936","$f9d2f7bcee7d91f9$export$511e57c5f7e959a9","$f9d2f7bcee7d91f9$export$62547fcf9689f3ed","current","$f9d2f7bcee7d91f9$export$2e2bcd8739ae039","Polyline1","factor_","geometryLayout_","geometryLayout","$f9d2f7bcee7d91f9$var$__extends","$9fd014ab6df63665$exports","getStrideForLayout","$292e4002746c8223$exports","$2e03ce1a961db7fd$exports","$34c742891733e7a4$export$2e2bcd8739ae039","RBush1","opt_maxEntries","rbush_","items_","extents","items","getAll","getInExtent","bbox","forEach_","forEachInExtent","rbush","$ccc4e6f11f11978f$export$2e2bcd8739ae039","ADDFEATURE","CHANGEFEATURE","REMOVEFEATURE","FEATURESLOADSTART","FEATURESLOADEND","FEATURESLOADERROR","$eb51d0a16123ee90$export$84bf76cd7afc7469","$588823c001569193$var$withCredentials","$588823c001569193$export$14cc81df70b6707e","format","success","failure","xhr1","XMLHttpRequest","open","responseType","withCredentials","onload","status","responseText","responseXML","DOMParser","parseFromString","response","onerror","send","$588823c001569193$export$441d7b57adab24d0","addFeatures","$84888e4daf3fdf44$export$d402fd02dc2b661c","VectorSourceEvent1","opt_feature","opt_features","$84888e4daf3fdf44$var$__extends","$84888e4daf3fdf44$export$2e2bcd8739ae039","VectorSource1","loader_","format_","url_","loader","strategy_","strategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","_loop_1","extentToLoad","this_1","removeLoadedExtent","featureChangeKeys","removed","setLoader","$efd3ba4ec2608b1d$var$source","$84888e4daf3fdf44$exports","$efd3ba4ec2608b1d$var$coordinatesList","$efd3ba4ec2608b1d$var$client","json","parse","location","pointsList","$efd3ba4ec2608b1d$var$renderRoute","$efd3ba4ec2608b1d$var$renderRoutes","$efd3ba4ec2608b1d$var$vectorLayer","$82a68515bd6ef378$exports","$efd3ba4ec2608b1d$var$osmLayer","$32e67a4d3559554a$exports","$6c8498cc816f2362$exports","$efd3ba4ec2608b1d$var$view","$41aa29ae0c4b607a$exports","loc1","loc2","fetch","feat","polyline","route","$f9d2f7bcee7d91f9$exports","$efd3ba4ec2608b1d$var$createRouteFeature","routes","$efd3ba4ec2608b1d$var$animate","$efd3ba4ec2608b1d$var$map"],"version":3,"file":"index.9ab5997d.js.map"}